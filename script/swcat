#!perl

# DATE
# VERSION

use 5.010;
use strict;
use warnings;
use Log::ger; BEGIN { $ENV{LOG_LEVEL} //= 'info' }

use Perinci::CmdLine::Any;
use Perinci::CmdLineX::CommonOptions::SelfUpgrade;

my $prefix = "/App/swcat/";

my $cli = Perinci::CmdLine::Any->new(
    url => $prefix,
    log => 1,
    subcommands => {
        'archive-info' => {url=>"${prefix}archive_info"},
        'available-archs' => {url=>"${prefix}available_archs"},
        'available-versions' => {url=>"${prefix}available_versions"},
        'download-url' => {url=>"${prefix}download_url"},
        'list-cpan' => {url=>"${prefix}list_cpan"},
        'list-installed' => {url=>"${prefix}list_installed"},
        'latest-version' => {url=>"${prefix}latest_version"},
        'release-note' => {url=>"${prefix}release_note"},
    },
);
Perinci::CmdLineX::CommonOptions::SelfUpgrade->apply_to_object($cli);
$cli->run;

# ABSTRACT: Software catalog
# PODNAME:

=head1 SYNOPSIS

 # list software known by local installation (known = has correponding
 # Software::Catalog::SW::* module installed)
 % swcat list-installed
 % swcat list-installed -l  ;# detail

 # list software known by App::swcat (list all available
 # Software::Catalog::SW::* modules on CPAN)
 % swcat list-cpan

 # what is the latest version number of a software?
 % swcat latest-version firefox  ;# by default will be cached for a day
 % swcat latest-version firefox --no-cache

 # what is the latest version number of a few software
 % swcat latest-version firefox seamonkey

 # list the latest version numbers of all known software
 % swcat latest-version

 # list the latest version numbers of known software matching a regex
 % swcat latest-version /fire|sea/

 # get list of available versions of a software
 % swcat available-versions bulwark-qt

 # get release note for the latest version of a software
 % swcat release-note bulwark-qt

 # get release note for a version of a software
 % swcat release-note bulwark-qt 1.3.0

 # get download URL(s) of a software
 % swcat download-url firefox
 % swcat download-url firefox --arch win32

To actually download, install, upgrade software, use L<instopt> (from
App::instopt).


=head1 SEE ALSO

L<Software::Catalog>

L<App::SoftwareCatalogUtils>

L<instopt> from L<App::instopt>
